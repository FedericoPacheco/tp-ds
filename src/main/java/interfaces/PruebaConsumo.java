/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import dto.ServicioPrestadoDTO;
import java.awt.Component;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultCellEditor;
import javax.swing.JSpinner;
import javax.swing.JSpinner.DefaultEditor;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Nahuel Riquelme
 */
public class PruebaConsumo extends javax.swing.JFrame {
    
    JSpinner sp;
    DefaultTableModel dtm;
    
    public PruebaConsumo() {
        initComponents();       
        agregarSpinnerYcargarModelo();
        actualizarTabla();
    }
    
    private void agregarSpinnerYcargarModelo(){
        //Creo el modelo de la tabla
        dtm = (DefaultTableModel) jTableConsumos.getModel();
        
        //Definicion de myspinner
        class MySpinnerEditor extends DefaultCellEditor{
            //JSpinner sp;
            DefaultEditor defaultEditor;
            JTextField text;
            // Initialize the spinner
            public MySpinnerEditor() {
                super(new JTextField());
                sp = new JSpinner();
                defaultEditor = ((DefaultEditor)sp.getEditor());
                text = defaultEditor.getTextField();
            }
            // Prepare the spinner component and return it
            public Component getTableCellEditorComponent(JTable table, Object 
            value, boolean isSelected, int row, int column) 
            {
                sp.setValue(value);
                return sp;
            }
            // Returns the current value of the spinners
            public Object getCellEditorValue() {
                return sp.getValue();
            }
        }
        //get the column model from JTable
        TableColumnModel model = jTableConsumos.getColumnModel();
        //get the 2nd column
        TableColumn col = model.getColumn(3);
        //set the editor
        col.setCellEditor(new MySpinnerEditor());  
    }
    
    private void actualizarTabla(){
        //Cargo los servicios relacionados con la estadia desde la base de datos
        ServicioPrestadoDTO servicio = new ServicioPrestadoDTO();
        servicio.setNombreConsumo("MINIBAR");
        servicio.setPrecioUnitario(BigDecimal.valueOf(100.00));
        servicio.setUnidadesAPagar(0);
        servicio.setUnidadesTotales(4);
        servicio.setCostoTotal(BigDecimal.valueOf(0));
        servicio.setDescripcion("CERVEZA MILLER");
        ServicioPrestadoDTO servicio2 = new ServicioPrestadoDTO();
        servicio2.setNombreConsumo("MINIBAR");
        servicio2.setPrecioUnitario(BigDecimal.valueOf(100.00));
        servicio2.setUnidadesAPagar(0);
        servicio2.setUnidadesTotales(6);
        servicio2.setCostoTotal(BigDecimal.valueOf(0));
        servicio2.setDescripcion("CERVEZA MILLER");
        List<ServicioPrestadoDTO> servicios = new ArrayList<>();
        servicios.add(servicio);
        servicios.add(servicio2);
        servicios.add(servicio);
        servicios.add(servicio);
        //Agrego los datos al arreglo
        Object[] o = new Object[7];
        for(ServicioPrestadoDTO s : servicios){ 
            o[0] = false;
            o[1] = s.getNombreConsumo();
            o[2] = s.getPrecioUnitario();            
            o[3] = s.getUnidadesAPagar();            
            o[4] = s.getUnidadesTotales();
            o[5] = s.getCostoTotal();
            o[6] = s.getDescripcion();    
            dtm.addRow(o);
        }
        //Actualizo la tabla
        dtm.fireTableDataChanged();
    }
    
    
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableConsumos = new javax.swing.JTable();
        jButtonCapturarDatos = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableConsumos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Consumos", "Precio unitario", "Unidades a pagar", "Unidades totales", "Costo total", "Descripci√≥n"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableConsumos.setRowHeight(30);
        jTableConsumos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableConsumosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableConsumos);

        jButtonCapturarDatos.setText("Capturar");
        jButtonCapturarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCapturarDatosActionPerformed(evt);
            }
        });

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonCapturarDatos)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCapturarDatos)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableConsumosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableConsumosMouseClicked
        //Lo uso para limitar los valore del spinner
        int filasSeleccionadas = jTableConsumos.getSelectedRowCount();
        if(filasSeleccionadas == 1){
            int row_selected = jTableConsumos.getSelectedRow();
            int limite = (int) dtm.getValueAt(row_selected,4);
            SpinnerModel model = new SpinnerNumberModel(
                0,  //initial value
                0,  //minimum value
                limite, //maximum value
                1   //step
            ); 
            sp.setModel(model);
            System.out.println("El limite es:" + limite);
        }
    }//GEN-LAST:event_jTableConsumosMouseClicked

    private void jButtonCapturarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCapturarDatosActionPerformed
        //Captura del check box y del spinner segun la fila
        System.out.println(dtm.getValueAt(1,0)); //Checkbox
        System.out.println(dtm.getValueAt(1,3)); //Spinner
    }//GEN-LAST:event_jButtonCapturarDatosActionPerformed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // TODO add your handling code here:
        System.out.println(jTextField1.getText().length());
        if(jTextField1.getText().length()==5){
            System.out.println("Mostrar razon social");
        }
    }//GEN-LAST:event_jTextField1KeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PruebaConsumo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PruebaConsumo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PruebaConsumo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PruebaConsumo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PruebaConsumo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCapturarDatos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableConsumos;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
